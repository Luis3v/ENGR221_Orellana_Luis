"""
Author: Luis Orellana
Filename: MySet
"""


class MySet:
    def __init__(self, initial_values):
        self.__s = []  #vals in the set
        self.__size = 0  #num of values in the set

        #go through initial values and add unique values to the set
        for value in initial_values:
            if value not in self.__s:
                self.__s.append(value)
                self.__size += 1

    def search(self, value_to_search):
        #go through items in the set
        for item in self.__s:
            #check if the item matches the value searched
            if item == value_to_search:
                return True  # value found in the set

        #if the loop completes without finding the value, return False
        return False  #value is not found in the set

    def insert(self, value_to_insert):
        #check if the value is not already in the set
        if value_to_insert not in self.__s:
            #iinsert the new value at the end of the set
            self.__s.append(value_to_insert)
            self.__size += 1

    def delete(self, value_to_delete):
        #check if the value to delete is in the set
        if value_to_delete in self.__s:
            # go through items in the set
            for idx, item in enumerate(self.__s):
                #find the index of the value to delete
                if item == value_to_delete:
                    #remove the value at the found index
                    del self.__s[idx]
                    self.__size -= 1
                    return True  #value deleted successfully

        return False  #value not found or not deleted

    def traverse(self):
        # go through items in the set and print each 
        for item in self.__s:
            print(item)